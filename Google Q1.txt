
Given an unsorted array A of size N of non-negative integers, find a continuous sub-array which adds to a given number S.

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of two lines. The first line of each test case is N and S, where N is the size of array and S is the sum. The second line of each test case contains N space separated integers denoting the array elements.

Output:
For each testcase, in a new line, print the starting and ending positions(1 indexing) of first such occuring subarray from the left if sum equals to subarray, else print -1.

Constraints:
1 <= T <= 100
1 <= N <= 107
1 <= Ai <= 1010

Example:
Input:
2
5 12
1 2 3 7 5
10 15
1 2 3 4 5 6 7 8 9 10
Output:
2 4
1 5

Explanation :
Testcase1: sum of elements from 2nd position to 4th position is 12
Testcase2: sum of elements from 1st position to 5th position is 15





-----------------------------ANSWER------------------------------------------------------------

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		
		while(T!=0)
		{
		    int sum = 0;
		
		int N = sc.nextInt();
		int[] ans = new int[2];
		int S = sc.nextInt();
		
		int[] A = new int[N];
		for(int i=0;i<N;i++)
		{
		    A[i] = sc.nextInt();    
		}
		
		for(int i=0;i<N;i++)
		{
		    
		    
		        sum = A[i];
    		    ans[0] = i+1;
    		    for(int j=i+1;j<N;j++)
    		    {
    		        if(sum<S)
    		        {
    		            
    		            sum += A[j];
    		            ans[1] = j+1;
    		        }
    		        else
    		        {
    		            break;
    		        }
    		    }
    		    if(S==A[i])
    		    {
    		        ans[1]=ans[0];
    		        break;
    		    }
    		    if(sum==S)
    		    {
    		        break;
    		    }
		    
		}
		if(sum<S || sum>S)
		{
		    System.out.println(-1);
		}
		else
		{
		System.out.println(ans[0]+" "+ans[1]);
		}
		T--;
	
		    
		}
	
	}
}